{"version":3,"sources":["pages/Home.jsx","data.js","actions/listProfessionsAction.js","actions/workerInfoAction.js","pages/Register.jsx","actions/listEntitiesAction.js","components/CityNotFound.jsx","components/ProfessionsList.jsx","pages/Results.jsx","pages/Entities.jsx","App.js","reportWebVitals.js","reducers/listProfessionsReducer.js","reducers/workerInfoReducer.js","reducers/listEntitiesReducer.js","store/index.js","index.js"],"names":["Home","to","className","React","Component","states","value","name","listProfessionsAction","professionsList","type","workerInfoAction","workerInfo","Register","props","state","shouldRedirect","isLoading","city","entity","job","stateShort","fetchProfessions","bind","handleChange","event","this","setState","target","a","searchProfessionList","getWorkerInfo","endpoit","fetch","request","json","professionList","message","action","onChange","htmlFor","id","map","onClick","connect","dispatch","listEntitiesAction","entitiesList","CityNotFound","ProfessionsList","profissao","handleClick","Results","selectedJob","shoulRedirect","fetchEntities","listEntities","endpoint","toUpperCase","listProfessionsReducer","workerInfoReducer","Entities","searchEntity","NomeFantasia","RazaoSocial","href","rel","class","listEntitiesReducer","App","path","render","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","rootReducer","combineReducers","extension","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9228a786.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Sua vaga de emprego está aqui!</h1>\n        <footer>\n          <Link to=\"/register\" className=\"nav-link\">Buscar emprego</Link>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","const states = [\n\t{ value: \"AC\", name: \"Acre\" },\n\t{ value: \"AL\", name: \"Alagoas\" },\n\t{ value: \"AP\", name: \"Amapá\" },\n\t{ value: \"AM\", name: \"Amazonas\" },\n\t{ value: \"BA\", name: \"Bahia\" },\n\t{ value: \"CE\", name: \"Ceará\" },\n\t{ value: \"DF\", name: \"Distrito Federal\" },\n\t{ value: \"ES\", name: \"Espírito Santo\" },\n\t{ value: \"GO\", name: \"Goiás\" },\n\t{ value: \"MA\", name: \"Maranhão\" },\n\t{ value: \"MT\", name: \"Mato Grosso\" },\n\t{ value: \"MS\", name: \"Mato Grosso do Sul\" },\n\t{ value: \"MG\", name: \"Minas Gerais\" },\n\t{ value: \"PA\", name: \"Pará\" },\n\t{ value: \"PB\", name: \"Paraíba\" },\n\t{ value: \"PR\", name: \"Paraná\" },\n\t{ value: \"PE\", name: \"Pernambuco\" },\n\t{ value: \"PI\", name: \"Piauí\" },\n\t{ value: \"RJ\", name: \"Rio de Janeiro\" },\n\t{ value: \"RN\", name: \"Rio Grande do Norte\" },\n\t{ value: \"RS\", name: \"Rio Grande do Sul\" },\n\t{ value: \"RO\", name: \"Rondônia\" },\n\t{ value: \"RR\", name: \"Roraima\" },\n\t{ value: \"SC\", name: \"Santa Catarina\" },\n\t{ value: \"SP\", name: \"São Paulo\" },\n\t{ value: \"SE\", name: \"Sergipe\" },\n\t{ value: \"TO\", name: \"Tocantins\" }\n]\n\nexport default states","const listProfessionsAction = (professionsList) => {\n  return {\n    type: 'CHANGE_PROFESSIONS_LIST',\n    professionsList,\n  }\n}\n\nexport default listProfessionsAction","const workerInfoAction = (workerInfo) => {\n  return {\n    type: 'GET_WORKER_INFO',\n    workerInfo,\n  }\n}\n\nexport default workerInfoAction","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport states from '../data';\nimport listProfessionsAction from '../actions/listProfessionsAction';\nimport workerInfoAction from '../actions/workerInfoAction';\nimport { connect } from 'react-redux';\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      shouldRedirect: '',\n      isLoading: '',\n      city: '',\n      entity: '',\n      job: '',\n      stateShort: 'AC',\n    };\n\n    this.fetchProfessions = this.fetchProfessions.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  async fetchProfessions(workerInfo) {\n    this.setState({\n      shouldRedirect: false\n    })\n\n    const { city, stateShort } = workerInfo;\n    const { searchProfessionList, getWorkerInfo } = this.props;\n\n    const apiKey = 'ddd70c32-fc98-4618-b494-a9698f824353';\n    const endpoit = `http://lb-aws-1105894158.sa-east-1.elb.amazonaws.com/profissao/${stateShort}/${city}?api-key=${apiKey}`;\n\n    const request = await fetch(endpoit);\n    const professionList = await request.json();\n\n    if (professionList.message) {\n      getWorkerInfo([])\n    } else {\n      getWorkerInfo(workerInfo);\n    }\n    \n    searchProfessionList(professionList);\n\n    this.setState({\n      shouldRedirect: true\n    })\n  }\n  render() {\n    return (\n      <div>\n        <h1>Registro</h1>\n        <form action=\"\" onChange={this.handleChange}>\n          <fieldset>\n            <legend>Informações pessoais</legend>\n          <label htmlFor=\"city-input\">\n            Cidade:\n            <br/>\n            <input type=\"text\" name=\"city\" id=\"city-input\" />\n          </label>\n          <br />\n          <label htmlFor=\"states-input\">\n            Estado:\n            <br/>\n            <select name=\"stateShort\" id=\"states-input\">\n              {states.map(({ value, name }) => {\n                return (\n                  <option key={value} value={value}>\n                    {name}\n                  </option>\n                );\n              })}\n            </select>\n          </label>\n          <br />\n          <label htmlFor=\"job-input\">\n            Profissão:\n            <br/>\n            <input type=\"text\" name=\"job\" id=\"job-input\" />\n          </label>\n          <br />\n          <label htmlFor=\"job-input\">\n            Entidade:\n            <br/>\n            <input type=\"text\" name=\"entity\" id=\"entity-input\" />\n          </label>\n          </fieldset>\n\n          <br />\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.fetchProfessions(this.state);\n            }}\n          >\n            Buscar resultados\n          </button>\n        </form>\n        <footer>\n          <Link to=\"/\" className=\"nav-link\">Voltar para Home</Link>\n        </footer>\n        {this.state.shouldRedirect === true ? <Redirect to=\"/results\" /> : null}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    searchProfessionList: (professionsList) =>\n      dispatch(listProfessionsAction(professionsList)),\n    getWorkerInfo: (workerInfo) => dispatch(workerInfoAction(workerInfo)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Register);\n","const listEntitiesAction = (entitiesList) => {\n  return {\n    type: 'GET_LIST_ENTITIES',\n    entitiesList\n  }\n}\n\nexport default listEntitiesAction\n","import React, { Component } from 'react';\n\nclass CityNotFound extends Component {\n  render() {\n    return <h1>Cidade não informada</h1>;\n  }\n}\n\nexport default CityNotFound;\n","import React, { Component } from 'react'\n\nclass ProfessionsList extends Component {\n  render() {\n    return(\n      <div id=\"job-container\">\n      {this.props.workerInfo.city\n        ? this.props.professionsList.map(({ profissao }) => {\n            return (\n              <div key={profissao}>\n                <button value={profissao} onClick={this.props.handleClick}>{profissao}</button>\n              </div>\n            );\n          })\n        : null}\n    </div>\n    )\n  }\n}\n\nexport default ProfessionsList","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport listEntitiesAction from '../actions/listEntitiesAction';\nimport CityNotFound from '../components/CityNotFound';\nimport ProfessionsList from '../components/ProfessionsList';\n\nclass Results extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedJob: '',\n      isLoading: '',\n      shoulRedirect: false,\n    };\n    this.fetchEntities = this.fetchEntities.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  async fetchEntities(selectedJob) {\n    this.setState({\n      isLoading: true,\n    });\n\n    const { city, stateShort } = this.props.workerInfo;\n    const { listEntities } = this.props;\n\n    const apiKey = '4b94dba2-5524-4632-939b-92df1c50a645';\n    const endpoint = `http://lb-aws-1105894158.sa-east-1.elb.amazonaws.com/entidade/${selectedJob}/${stateShort}/${city}?api-key=${apiKey}`;\n\n    const request = await fetch(endpoint);\n    const entitiesList = await request.json();\n\n    listEntities(entitiesList);\n\n    this.setState({\n      isLoading: false,\n    });\n  }\n\n  handleClick(event) {\n    this.setState({\n      selectedJob: event.target.value,\n      shoulRedirect: true,\n    });\n\n    this.fetchEntities(event.target.value);\n  }\n  render() {\n    const { professionsList, workerInfo } = this.props;\n\n    return (\n      <div>\n        {workerInfo.city ? (\n          <h1>{`Resultados para ${\n            workerInfo.stateShort\n          }, ${workerInfo.city.toUpperCase()}`}</h1>\n        ) : (\n          <CityNotFound />\n        )}\n\n        {workerInfo.city ? (\n          <em>\n            Clique um uma profissão para ver as entidades que oferecem os cargos\n          </em>\n        ) : null}\n\n        <ProfessionsList\n          workerInfo={workerInfo}\n          professionsList={professionsList}\n          handleClick={this.handleClick}\n        />\n        <footer>\n          <Link to=\"/register\" className=\"nav-link\">Registro</Link>\n        </footer>\n\n        {this.state.shoulRedirect ? (\n          <Redirect to={`/entities/${this.state.selectedJob}`} />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    professionsList: state.listProfessionsReducer.professionsList,\n    workerInfo: state.workerInfoReducer,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    listEntities: (entitiesList) => dispatch(listEntitiesAction(entitiesList)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Results);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nclass Entities extends React.Component {\n  render() {\n    const { entitiesList, workerInfo } = this.props;\n\n    return (\n      <div>\n        <h1>Entidades</h1>\n        <div id=\"entities-container\" onClick={this.searchEntity}>\n          {entitiesList.map(({ NomeFantasia, RazaoSocial }) => {\n            return (\n              \n              <a\n                href={`https://www.google.com/search?q=${RazaoSocial}%20${workerInfo.city.toUpperCase()}`}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                <div class=\"entity\" key={NomeFantasia}>\n                  {`${RazaoSocial} (${NomeFantasia})`}\n                </div>\n              </a>\n            );\n          })}\n        </div>\n        <footer>\n          <Link to=\"/\" className=\"nav-link\">\n            Home\n          </Link>\n        </footer>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    entitiesList: state.listEntitiesReducer.entitiesList,\n    workerInfo: state.workerInfoReducer,\n  };\n};\n\nexport default connect(mapStateToProps)(Entities);\n","import { Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Register from './pages/Register';\nimport Results from './pages/Results';\nimport Entities from './pages/Entities'\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/entities/:job\" render={(props) => <Entities {...props}/>} />\n      <Route path=\"/results\" component={Results} />\n      <Route path=\"/register\" component={Register} />\n      <Route exact path=\"/\" component={Home} />\n    </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const INITIAL_STATE = {\n  professionsList: []\n}\n\nconst listProfessionsReducer = (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case 'CHANGE_PROFESSIONS_LIST':\n      return {\n        professionsList: action.professionsList\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default listProfessionsReducer","const INITIAL_STATE = {\n  workerInfo: {}\n}\n\nconst workerInfoReducer = (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case 'GET_WORKER_INFO':\n      return {\n        city: action.workerInfo.city,\n        entity: action.workerInfo.entity,\n        job: action.workerInfo.job,\n        stateShort: action.workerInfo.stateShort\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default workerInfoReducer","const INITIAL_STATE = {\n  entitiesList: []\n}\n\nconst listEntitiesReducer = (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case 'GET_LIST_ENTITIES':\n      return {\n        entitiesList: action.entitiesList\n      };\n    \n      default:\n        return state;\n  }\n}\n\nexport default listEntitiesReducer\n","import { createStore, combineReducers } from 'redux'\nimport listProfessionsReducer from '../reducers/listProfessionsReducer'\nimport workerInfoReducer from '../reducers/workerInfoReducer'\nimport listEntitiesReducer from '../reducers/listEntitiesReducer'\n\nconst rootReducer = combineReducers({\n  listProfessionsReducer,\n  workerInfoReducer,\n  listEntitiesReducer\n})\n\nconst extension = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\nconst store = createStore(\n  rootReducer,\n  extension\n)\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}